~S"""
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

defmodule Fib do
  def even_sum(limit, ef1, ef2, _, sum) when ef2 <= limit do
    sum = sum + ef2
    ef3 = 4 * ef2 + ef1
    even_sum(limit, ef2, ef3, ef3, sum)
  end

  def even_sum(limit, _, _, ef3, sum) when ef3 > limit do
    sum
  end
end

# Recurrence relation for the Even Fibonacci sequence is:
#      EFn = 4EFn-1 + EFn-2
# with seed values
#      EF0 = 0 and EF1 = 2.
f = Fib.even_sum(3_999_999, 0, 2, nil, 0)
IO.puts(f)
